                                Media Queries = Media Types + Media Features

        Media Types

Media Query é um processo que visa uma otimização de recursos, sendo aplicado a interfaces, melhorando assim a experiência do usuário, por exemplo nas diferentes telas de dispositivos, também age na mudança de formatação em telas e conteúdo impresso e outros.

    Para desenvolver uma WEB para objetivos diferentes, CHAMADOS DE "TYPES" -TIPOS - (TELA e IMPRESSORA), devemos trabalhar com CSS, assim criando dois (02) links:CSS respectivos.
        - Para a TELA usamos link:CSS <...href="tela.css" media="screen">
        - Para a IMPRESSORA usamos link:CSS <...href="impressora.css" media="print">

___________________________________________________________________________________________

        Media Features 

Media Features, são basicamente caracteristica de media, caracteristicas de tela, pois dependem do tamanho de diferentes telas. 
    Suas caracteristicas são, modo retrato (portrait) e modo paisagem (landscape), para que o comando seja compreendido a Media Feature deve ser inserida juntamente com o Media Type, porém entre parênteses. Conforme o exemplo abaixo:

<link rel="stylesheet" href="estilos/retrato.css" media="screen and (orientation: portrait)">
        <...href="estilos/retrato.css" media="screen and (orientation: portrait)">
                   <...media="screen and (orientation: portrait)">
                        <...and (orientation: portrait)">

    Perceba a Media Feature inserida dentro do parênteses "(orientation: portrait)", e a utilização do "and", pois além de informar o tipo de Media informamos também a caracteristica, logo, Media Type e (and) Media Feature. Se tivermos 03 Media Features, utilizaremos 03 parênteses.  

Ou seja, a Media Feuture serve para configurarmos a mesma página WEB com configurações diferentes. Uma das formas é se baseando com a orientação dos dispositivos.

______________________________________________________________________________________________________

Tipos de conformação:

Sabemos que existe para impressão, e diferentes telas, no exercicio mq004 aplicamos os conhecimentos para transformar uma página web em diferentes dispositivos CELULAR, TABLET, LAPTOP, E TELAS GRANDES (TV), como também formas para impressão. Aplicando;

@media screen e @media print

Para diferentes telas aplicamos; 
    @media screen and (max-width: 600px) para telas até 600px de largura
    @media screen and (min-width: 600px) and (max-width: 768px) para telas entre 600px até 768px
            LEMBRANDO QUE O AND E ENTRE PARÊNTESES "()" DESIGNA A MEDIA FEATURES, apartir daí aplicar as configuração desejadas para cada tamanho de tela. (body, main, h1, img, fontes, e mais)

    @media print { Seguiu o mesmo principio das "@media screen", mas boltado a impressão.

    ________________________________________________________________________

    Inserindo o JAVASCRIPT no html

    Primeiramente é necessário nomear a classe em que queremos trabalhar, no caso do exemplo foi o "menu", logo, nomeamos com o id="itens".

    Segundo, criamos uma condicionante para quando clicarmos no ícone que será condicionado com /onclick="clickMenu()"/ :

        <span id="burguer" class="material-symbols-outlined" onclick="clickMenu()"> menu </span>

    Terceiro, utilizaremos o id nomeado "itens" da classe <menu id="itens">... em um script pós main. Em uma função /itens.style.display == 'block'/.
        
        *OBS: == significa igual
              = significa recebe
        
        Então trabalharemos com a função IF e ELSE; logo

        <script>
                function clickMenu() {
                        if (itens.style.display == 'block') {
                            itens.style.display = 'none'
                        } else {
                                itens.style.display = 'block'
                        }
                }
        </script>

        Ou seja, esse comando significa que, se o "itens" estiver com o display block, [aparecendo], ele receberá o comando de display none [esconder]. Se não estiver nesta condição ele receberá o comando para o display block [Aparecer].

======================================================================

        Mas também, se atentar com uma ação que ocorre correqueiramente, que quando abrimos o menu (clicando) e fechando o menu (clicando novamente). O botão (icone do menu) some quando variamos o tamanho da tela (viewport). Para corrigir isso devemos desenvolver uma outra função. 

        <script>
                function onresize() {
                        if (window.innerWidth >= 768) {
                            itens.style.display = 'block'    
                        } else{
                                itens.style.display ='none'
                        }
                }
        </script>

        Ou seja, nesta função digo que:
                + Para o tamanho (onresize) - temos o seguinte
                + Se a largura interna da janela (window.innerWidth) for maior ou igual a 768, o icone do menu (itens.style.display) deve aparecer (block)
                + Senão, o ícone do menu (itens.style.display) não deve aparecer (none).

=======================================================================
         